{
  "active": false,
  "connections": {
    "SubWorkflow": {
      "main": [
        [
          {
            "node": "Get or Generate SEO Strategy Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post Idea Agent": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Params": {
      "main": [
        [
          {
            "node": "Post Idea Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Document": {
      "main": [
        [
          {
            "node": "Params",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get or Generate SEO Strategy Document": {
      "main": [
        [
          {
            "node": "If already generating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If already generating": {
      "main": [
        [],
        [
          {
            "node": "Get Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "If title <= 60 chats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Post Idea Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "Post Idea Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Reduce title length to 60 chars": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Reduce title length to 60 chars",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If title <= 60 chats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If title <= 60 chats": {
      "main": [
        [],
        [
          {
            "node": "Reduce title length to 60 chars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-29T20:05:00.338Z",
  "id": "poonN77q8k2q5Laz",
  "meta": null,
  "name": "Blog Post Idea Agent",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "query"
            },
            {
              "name": "seoContentStrategy"
            },
            {
              "name": "config",
              "type": "object"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1280,
        -20
      ],
      "id": "b6a79b8c-f3cf-4abd-a8db-9ded569e74bf",
      "name": "SubWorkflow"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}\n\nSEO Content Strategy: {{ $json.seoContentStrategy }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are an ideas agent specialized in generating post ideas based on an SEO Content Strategy document provided by the user. Follow these instructions:\n\t1.\tInput Processing:\n\t•\tRead and analyze the SEO Content Strategy document provided by the user.\n\t•\tIdentify key topics, trends, keywords, and any data insights that can inform a new post idea.\n\t2.\tIdea Generation:\n\t•\tDevelop a creative and data-driven post idea that aligns with the strategy.\n\t•\tEnsure that the idea is innovative, relevant, and actionable.\n\t3.\tOutput Requirements:\n\t•\tProduce the final output in JSON format.summarizing the idea.\n\t•\tEnsure both the title and description clearly reflect the insights derived from the provided SEO content strategy.\n\t4.\tConstraints:\n\t•\tDo not exceed the 100-character limit for the description.\n\t•\tGround your idea entirely on the data and insights from the SEO Content Strategy document.\n\t•\tMaintain clarity and brevity in both the title and the description.\n\nYour goal is to produce a JSON output that provides a clear, data-driven idea for a new post, adhering strictly to the formatting and length constraints specified.\n\nRespond only with:\n{\n\"title\": \"A concise, engaging title for the post idea. At least 100 characters\",\n\"description\": \"A short description. Max 100 characters\"\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        0,
        0
      ],
      "id": "737fbf5f-6270-42e9-bb9f-6f28fd5c048f",
      "name": "Post Idea Agent"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"title\": {\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"description\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        640,
        420
      ],
      "id": "ed1372df-9a4e-48ab-a2a1-c69ff88d4192",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        320,
        240
      ],
      "id": "056be294-a17f-43c7-b89a-e5daac05b5b7",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "I92UkH9mThS7D4I6",
          "name": "CodPal Account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const root = $(\"SubWorkflow\").item.json;\nreturn {\n  ...root.config,\n  query: root.query,\n  seoContentStrategy: $input.item.json.fileContent\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -300,
        0
      ],
      "id": "76798baa-bf2d-49c4-84af-402f29c45ff3",
      "name": "Params"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "LJeRjkaNnZAhxS0W",
          "mode": "list",
          "cachedResultName": "Get Latest SEO Content Strategy"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "wordpressClientId": "={{ $('SubWorkflow').item.json.config.wordpressClientId }}",
            "documentType": "SeoContentStrategy"
          },
          "matchingColumns": [
            "wordpressClientIdentifier"
          ],
          "schema": [
            {
              "id": "wordpressClientId",
              "displayName": "wordpressClientId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "documentType",
              "displayName": "documentType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -520,
        0
      ],
      "id": "58591752-8ae8-4a05-904f-2fc4c133df4a",
      "name": "Get Document"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "bh0ZlfpPSQlAPRhl",
          "mode": "list",
          "cachedResultName": "SEO Content Strategy Get or Generate"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "config": "={{ $json.config }}"
          },
          "matchingColumns": [
            "config"
          ],
          "schema": [
            {
              "id": "config",
              "displayName": "config",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -1040,
        -20
      ],
      "id": "1c773d17-e273-4fd8-bdd1-43e89037b23d",
      "name": "Get or Generate SEO Strategy Document"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f688a7ed-2f08-48d9-85f1-dcc89b2b30c1",
              "leftValue": "={{ $json.error }}",
              "rightValue": "ALREADY_GENERATING",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -800,
        -20
      ],
      "id": "30bffd67-401e-4743-a924-b51fbd34173d",
      "name": "If already generating"
    },
    {
      "parameters": {
        "options": {
          "prompt": "Instructions:\n--------------\n{instructions}\n--------------\nCompletion:\n--------------\n{completion}\n--------------\n\nAbove, the Completion did not satisfy the constraints given in the Instructions.\nError:\n--------------\n{error}\n--------------\n\nPlease try again. Please only respond with an answer that satisfies the constraints laid out in the Instructions:"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        520,
        220
      ],
      "id": "b0637439-083e-47f1-a674-9c3e61698ac7",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        440,
        420
      ],
      "id": "4c6a0dd7-4ecb-47ec-9476-1517eb87fa61",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "I92UkH9mThS7D4I6",
          "name": "CodPal Account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "Ensure the user's message confirms to the following JSON:\n{\n\"title\": \"string\",\n\"description\": \"string\n}\nIf it does, repeat the same message, if not, structure it correctly.\nOutput only the JSON, no other commentary."
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        360,
        0
      ],
      "id": "5c5ea40d-7b3f-4edd-a36e-eb9b170c74ac",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -80,
        220
      ],
      "id": "2e0bf383-bf11-4c82-b4e5-796dc8485c35",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "I92UkH9mThS7D4I6",
          "name": "CodPal Account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=post-idea-{{ $('Params').item.json.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        80,
        220
      ],
      "id": "6a8d9d96-41d9-4a7f-8cbc-b9871dab6875",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Reduce the following SEO title to 60 characters max. Maintain the writing style and meaning as much as possible. Do no use \":\" in the title.\n\nTitle: {{ $json.output.title }}\n\nOutput only the shortened title. Nothing else."
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1160,
        120
      ],
      "id": "1fe5d07b-a458-4249-9aa0-0903d66f5a97",
      "name": "Reduce title length to 60 chars"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1160,
        340
      ],
      "id": "d24819fe-5ed6-4fd3-980f-7dbe232389b5",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "I92UkH9mThS7D4I6",
          "name": "CodPal Account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9e727085-a67a-4031-8ad0-f3505c532ede",
              "name": "output.title",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "d5469d41-c5b9-4fd2-8bf5-ce89eae72213",
              "name": "output.description",
              "value": "={{ $('Basic LLM Chain').item.json.output.description }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1520,
        120
      ],
      "id": "760a74a0-9132-4348-ad09-f0d323596e48",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "79e3e372-ee59-4516-96c3-d4c78eb338ce",
              "leftValue": "={{ $json.output.title.length }}",
              "rightValue": 60,
              "operator": {
                "type": "number",
                "operation": "lte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        860,
        0
      ],
      "id": "4d113ed9-1d75-45a6-a832-fefeaea740f1",
      "name": "If title <= 60 chats"
    }
  ],
  "pinData": {
    "SubWorkflow": [
      {
        "json": {
          "query": "Generate an idea",
          "seoContentStrategy": "CTO as a servcie",
          "config": {
            "id": "rece2Siq6iLfUTt9s",
            "Name": "Apostolos",
            "urlEncoded": "aHR0cHM6Ly9jb2RwYWwuY29t",
            "telegramChatId": "893910766",
            "message": "/start",
            "wordpressUsername": "apostolis.stephanou@gmail.com",
            "wordpressPassword": "K^lRRPq*6C9tU!x^sLDsP$Nd",
            "wordpressUrl": "https://codpal.com",
            "wordpressClientId": "recffZZw0CIteTg2l",
            "wordpressClientIdentifier": 1
          }
        }
      }
    ]
  },
  "repo_name": "n8n-backup",
  "repo_owner": "apostolisCodpal",
  "repo_path": "https://github.com/apostolisCodpal/n8n-backup/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-03-29T20:07:52.000Z",
  "versionId": "a13f6eb4-aeb2-436b-9a43-bf3d4a2e786b"
}