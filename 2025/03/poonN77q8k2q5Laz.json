{
  "active": false,
  "connections": {
    "Post Idea Agent": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Params": {
      "main": [
        [
          {
            "node": "Post Idea Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Document": {
      "main": [
        [
          {
            "node": "WP Creds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get or Generate SEO Strategy Document": {
      "main": [
        [
          {
            "node": "If already generating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If already generating": {
      "main": [
        [],
        [
          {
            "node": "Get Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "If title <= 60 chars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Post Idea Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "Post Idea Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Reduce title length to 60 chars": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Reduce title length to 60 chars",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If title <= 60 chars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Posts": {
      "main": [
        [
          {
            "node": "Params",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WP Creds": {
      "main": [
        [
          {
            "node": "Get Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigger": {
      "main": [
        [
          {
            "node": "Get or Generate SEO Strategy Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Reduce description length to 160 chars",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "If description <> 140-160 chars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reduce description length to 160 chars": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If title <= 60 chars": {
      "main": [
        [
          {
            "node": "If description <> 140-160 chars",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Reduce title length to 60 chars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If description <> 140-160 chars": {
      "main": [
        [],
        [
          {
            "node": "Reduce description length to 160 chars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-29T20:05:00.338Z",
  "id": "poonN77q8k2q5Laz",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Blog Post Idea Agent",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}\n\nSEO Content Strategy: {{ $json.seoContentStrategy }}\n\nThe idea must be different than the existing posts.\nExisting posts:\n{{ $json.existingPosts.map(x => x.title).join(\"\\n\") }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are an ideas agent specialized in generating post ideas based on an SEO Content Strategy document provided by the user. Follow these instructions:\n\t1.\tInput Processing:\n\t•\tRead and analyze the SEO Content Strategy document provided by the user.\n\t•\tIdentify key topics, trends, keywords, and any data insights that can inform a new post idea.\n\t2.\tIdea Generation:\n\t•\tDevelop a creative and data-driven post idea that aligns with the strategy.\n\t•\tEnsure that the idea is innovative, relevant, and actionable.\n\t3.\tOutput Requirements:\n\t•\tProduce the final output in JSON format.summarizing the idea.\n\t•\tEnsure both the title and description clearly reflect the insights derived from the provided SEO content strategy.\n\t4.\tConstraints:\n    •\tDo not exceed the 60-character limit for the title.\n\t•\tDescription must be 140-160 characters.\n\t•\tGround your idea entirely on the data and insights from the SEO Content Strategy document.\n\t•\tMaintain clarity and brevity in both the title and the description.\n\nYour goal is to produce a JSON output that provides a clear, data-driven idea for a new post, adhering strictly to the formatting and length constraints specified.\n\nRespond only with:\n{\n\"title\": \"A concise, engaging SEO title for the post idea. Max 60 characters.\",\n\"description\": \"A short SEO description. Max 160 characters.\"\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        280,
        0
      ],
      "id": "737fbf5f-6270-42e9-bb9f-6f28fd5c048f",
      "name": "Post Idea Agent"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"title\": {\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"description\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        920,
        420
      ],
      "id": "ed1372df-9a4e-48ab-a2a1-c69ff88d4192",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        600,
        240
      ],
      "id": "056be294-a17f-43c7-b89a-e5daac05b5b7",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "I92UkH9mThS7D4I6",
          "name": "CodPal Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const root = $(\"Trigger\").item.json;\nreturn {\n  query: root.query,\n  seoContentStrategy: $(\"Get Document\").item.json.fileContent,\n  existingPosts: $input.all().map(input => {\n    const json = input.json;\n    return {\n      title: json.title.rendered ?? json.title.raw\n    }\n  })\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        40,
        0
      ],
      "id": "76798baa-bf2d-49c4-84af-402f29c45ff3",
      "name": "Params"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "LJeRjkaNnZAhxS0W",
          "mode": "list",
          "cachedResultName": "Get Latest SEO Content Strategy"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "wordpressClientId": "={{ $('Trigger').item.json.config.wordpressClientId }}",
            "documentType": "SeoContentStrategy"
          },
          "matchingColumns": [
            "wordpressClientIdentifier"
          ],
          "schema": [
            {
              "id": "wordpressClientId",
              "displayName": "wordpressClientId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "documentType",
              "displayName": "documentType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -520,
        0
      ],
      "id": "58591752-8ae8-4a05-904f-2fc4c133df4a",
      "name": "Get Document"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "bh0ZlfpPSQlAPRhl",
          "mode": "list",
          "cachedResultName": "SEO Content Strategy Get or Generate"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "config": "={{ $json.config }}"
          },
          "matchingColumns": [
            "config"
          ],
          "schema": [
            {
              "id": "config",
              "displayName": "config",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -1040,
        -20
      ],
      "id": "1c773d17-e273-4fd8-bdd1-43e89037b23d",
      "name": "Get or Generate SEO Strategy Document"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f688a7ed-2f08-48d9-85f1-dcc89b2b30c1",
              "leftValue": "={{ $json.error }}",
              "rightValue": "ALREADY_GENERATING",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -800,
        -20
      ],
      "id": "30bffd67-401e-4743-a924-b51fbd34173d",
      "name": "If already generating"
    },
    {
      "parameters": {
        "options": {
          "prompt": "Instructions:\n--------------\n{instructions}\n--------------\nCompletion:\n--------------\n{completion}\n--------------\n\nAbove, the Completion did not satisfy the constraints given in the Instructions.\nError:\n--------------\n{error}\n--------------\n\nPlease try again. Please only respond with an answer that satisfies the constraints laid out in the Instructions:"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        800,
        220
      ],
      "id": "b0637439-083e-47f1-a674-9c3e61698ac7",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        720,
        420
      ],
      "id": "4c6a0dd7-4ecb-47ec-9476-1517eb87fa61",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "I92UkH9mThS7D4I6",
          "name": "CodPal Account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "Ensure the user's message confirms to the following JSON:\n{\n\"title\": \"string\",\n\"description\": \"string\n}\nIf it does, repeat the same message, if not, structure it correctly.\nOutput only the JSON, no other commentary."
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        640,
        0
      ],
      "id": "5c5ea40d-7b3f-4edd-a36e-eb9b170c74ac",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        200,
        220
      ],
      "id": "2e0bf383-bf11-4c82-b4e5-796dc8485c35",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "I92UkH9mThS7D4I6",
          "name": "CodPal Account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=post-idea1-{{ $('Params').item.json.id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        360,
        220
      ],
      "id": "6a8d9d96-41d9-4a7f-8cbc-b9871dab6875",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Reduce the following SEO title to 60 characters max. Maintain the writing style and meaning as much as possible. Do no use \":\" in the title.\n\nTitle: {{ $json.output.title }}\n\nOutput only the shortened title. Nothing else."
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1440,
        120
      ],
      "id": "1fe5d07b-a458-4249-9aa0-0903d66f5a97",
      "name": "Reduce title length to 60 chars"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1440,
        340
      ],
      "id": "d24819fe-5ed6-4fd3-980f-7dbe232389b5",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "I92UkH9mThS7D4I6",
          "name": "CodPal Account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9e727085-a67a-4031-8ad0-f3505c532ede",
              "name": "output.title",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "d5469d41-c5b9-4fd2-8bf5-ce89eae72213",
              "name": "output.description",
              "value": "={{ $('Basic LLM Chain').item.json.output.description }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1800,
        120
      ],
      "id": "760a74a0-9132-4348-ad09-f0d323596e48",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "getAll",
        "returnAll": true,
        "options": {
          "status": "publish"
        }
      },
      "type": "n8n-nodes-base.wordpress",
      "typeVersion": 1,
      "position": [
        -160,
        0
      ],
      "id": "bb10260c-4170-4fa0-afeb-5eabd9c614fd",
      "name": "Get Posts",
      "credentials": {
        "wordpressApi": {
          "id": "XgkEm6HEu6J7cAxr",
          "name": "WP Creds"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b4ee67b3-b417-4baa-910d-1caac99b5456",
              "name": "URL",
              "value": "={{ $('Trigger').first().json.config.wordpressUrl }}",
              "type": "string"
            },
            {
              "id": "7f471c0a-8e38-479e-9070-65e925c7e67f",
              "name": "Wordpress Username",
              "value": "={{ $('Trigger').first().json.config.wordpressUsername }}",
              "type": "string"
            },
            {
              "id": "17fb6dd9-fed5-4c24-83fa-73a1c4a08844",
              "name": "Wordpress Password",
              "value": "={{ $('Trigger').first().json.config.wordpressPassword }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -340,
        0
      ],
      "id": "5cf846b4-25dc-4572-b512-9bea59a52e87",
      "name": "WP Creds"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "query"
            },
            {
              "name": "config",
              "type": "object"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1280,
        -20
      ],
      "id": "b6a79b8c-f3cf-4abd-a8db-9ded569e74bf",
      "name": "Trigger"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2380,
        340
      ],
      "id": "8621887b-2d5d-44f6-8066-5bce9edacd45",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "I92UkH9mThS7D4I6",
          "name": "CodPal Account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9e727085-a67a-4031-8ad0-f3505c532ede",
              "name": "output.title",
              "value": "={{ $('If description <> 140-160 chars').item.json.output.title }}",
              "type": "string"
            },
            {
              "id": "d5469d41-c5b9-4fd2-8bf5-ce89eae72213",
              "name": "output.description",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2760,
        100
      ],
      "id": "d986bf48-ade5-4ce6-857c-c385969a8d00",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Adjust the length of the following SEO description to be between 140-160 characters. Maintain the writing style and meaning as much as possible. Do no use \":\".\n\nTitle: {{ $json.output.title }}\nDescription: {{ $json.output.description }} (currently {{ $json.output.description.length }} characters long)\n\nOutput only the shortened description. Nothing else."
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        2400,
        100
      ],
      "id": "2f824245-7d59-4bd3-a120-12819b14db4d",
      "name": "Reduce description length to 160 chars"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "79e3e372-ee59-4516-96c3-d4c78eb338ce",
              "leftValue": "={{ $json.output.title.length }}",
              "rightValue": 60,
              "operator": {
                "type": "number",
                "operation": "lte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1140,
        0
      ],
      "id": "4d113ed9-1d75-45a6-a832-fefeaea740f1",
      "name": "If title <= 60 chars"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "79e3e372-ee59-4516-96c3-d4c78eb338ce",
              "leftValue": "={{ $json.output.description.length }}",
              "rightValue": 140,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            },
            {
              "id": "958e2aae-5fe9-4b62-b7ce-40d1b0a4a88c",
              "leftValue": "={{ $json.output.description.length }}",
              "rightValue": 160,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2100,
        -20
      ],
      "id": "fc546905-8617-4be1-8b56-8c966e6b52db",
      "name": "If description <> 140-160 chars"
    }
  ],
  "pinData": {
    "Trigger": [
      {
        "json": {
          "query": "Generate an idea",
          "config": {
            "id": "rece2Siq6iLfUTt9s",
            "Name": "Apostolos",
            "urlEncoded": "aHR0cHM6Ly9jb2RwYWwuY29t",
            "telegramChatId": "893910766",
            "message": "/start",
            "wordpressUsername": "apostolis.stephanou@gmail.com",
            "wordpressPassword": "K^lRRPq*6C9tU!x^sLDsP$Nd",
            "wordpressUrl": "https://codpal.com",
            "wordpressClientId": "recffZZw0CIteTg2l"
          }
        }
      }
    ]
  },
  "repo_name": "n8n-backup",
  "repo_owner": "apostolisCodpal",
  "repo_path": "https://github.com/apostolisCodpal/n8n-backup/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-04-02T17:14:07.000Z",
  "versionId": "acabac78-0efb-4b4e-8210-fa1802d988a7"
}